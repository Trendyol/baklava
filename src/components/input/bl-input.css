:host {
  display: inline-block;
  width: 200px;
  position: relative;
}

.wrapper {
  --border-color: var(--bl-color-border);
  --icon-color: var(--bl-color-content-tertiary);
  --text-color: var(--bl-color-content-primary);
  --height: var(--bl-size-2xl);
  --input-font: var(--bl-font-body-text-2);
  --line-height: var(--bl-font-body-text-2-line-height);
  --icon-size: var(--line-height);
  --padding-vertical: calc((var(--height) - var(--line-height)) / 2);
  --padding-horizontal: var(--bl-size-xs);

  display: flex;
  flex-direction: column;
  position: relative;
  gap: var(--bl-size-3xs);
}

.wrapper:focus-within {
  --border-color: var(--bl-color-primary);
  --icon-color: var(--bl-color-primary);
}

.wrapper.dirty.invalid {
  --border-color: var(--bl-color-danger);
  --icon-color: var(--bl-color-danger);
}

:host([size='large']) .wrapper {
  --height: var(--bl-size-3xl);
  --padding-vertical: var(--bl-size-xs);
  --padding-horizontal: var(--bl-size-m);
}

:host([size='small']) .wrapper {
  --height: var(--bl-size-xl);
  --input-font: var(--bl-font-body-text-3);
  --padding-vertical: var(--bl-size-3xs);
  --icon-size: var(--bl-font-body-text-3-line-height);
}

label {
  position: absolute;
  top: var(--padding-vertical);
  left: var(--padding-horizontal);
  right: var(--padding-horizontal);
  max-width: max-content;
  transition: all ease-in 0.2s;
  pointer-events: none;
  font: var(--input-font);
  color: var(--bl-color-content-tertiary);
  padding: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.input-wrapper {
  --border-size: 1px;

  display: flex;
  box-sizing: border-box;
  gap: var(--padding-vertical);
  height: var(--height);
  border: solid var(--border-size) var(--border-color);
  padding: 0 calc(var(--padding-horizontal) - var(--border-size));
  border-radius: 4px;
}

input {
  width: 100%;
  align-self: stretch;
  outline: 0;
  border: 0;
  padding: 0;
  font: var(--input-font);
  color: var(--text-color);
  -webkit-text-fill-color: var(--text-color);
  background-color: transparent;
}

.icon {
  display: flex;
  align-items: center;
  gap: 8px;
  flex-basis: var(--icon-size);
  align-self: center;
  height: var(--icon-size);
}

bl-icon:not(.reveal-icon) {
  font-size: var(--icon-size);
  color: var(--icon-color);
  height: var(--icon-size);
}

.reveal-button bl-icon {
  display: none;
}

bl-icon[name='eye_on'] {
  display: inline-block;
}

.password-visible bl-icon[name='eye_on'] {
  display: none;
}

.password-visible bl-icon[name='eye_off'] {
  display: inline-block;
}

.wrapper:not(.has-icon) .icon {
  display: none;
}

.hint {
  display: none;
  font: var(--bl-font-body-text-3);
  padding: 0 var(--padding-horizontal);
}

.hint p {
  padding: 0;
  margin: 0;
}

::placeholder {
  color: var(--bl-color-content-tertiary);
  -webkit-text-fill-color: var(--bl-color-content-tertiary);
}

:host([label]) ::placeholder {
  color: transparent;
  -webkit-text-fill-color: transparent;
  transition: color ease-out 0.4s;
}

:host([label-fixed]) ::placeholder,
:host .wrapper:focus-within ::placeholder {
  color: var(--bl-color-content-tertiary);
  -webkit-text-fill-color: var(--bl-color-content-tertiary);
}

:host([disabled]) .input-wrapper {
  cursor: not-allowed;
  background-color: var(--bl-color-secondary-background);

  --text-color: var(--bl-color-content-passive);
}

input:disabled {
  cursor: not-allowed;
}

:where(.wrapper:focus-within, .wrapper.has-value) label {
  --label-padding: var(--bl-size-3xs);

  top: 0;
  left: calc(var(--padding-horizontal) - var(--label-padding));
  transform: translateY(-50%);
  font: var(--bl-font-caption);
  color: var(--bl-color-content-secondary);
  padding: 0 var(--label-padding);
  background-color: var(--bl-color-primary-background);
  pointer-events: initial;
}

:where(.has-icon:not(:focus-within), .has-icon:not(.has-value)) label {
  right: calc(var(--padding-horizontal) + var(--icon-size) + var(--padding-vertical));
}

:host([label-fixed]) label {
  position: static;
  transition: none;
  transform: none;
  pointer-events: initial;
  font: var(--bl-font-caption);
  color: var(--bl-color-content-secondary);
  padding: 0;
}

.error-icon,
.invalid-text {
  display: none;
}

.dirty.invalid label,
.invalid-text,
.error-icon {
  color: var(--bl-color-danger);
}

.help-text {
  color: var(--bl-color-content-secondary);
}

:host([help-text]) .hint,
.dirty.invalid .hint {
  display: block;
}

.dirty.invalid .invalid-text {
  display: block;
}

.dirty.invalid .help-text {
  display: none;
}

.dirty.invalid .error-icon {
  display: inline-block;
}

.dirty.invalid .custom-icon ~ .error-icon {
  display: none;
}
