:host {
  display: inline-block;
  width: 200px;
  position: relative;

  --bl-input-padding-vertical: var(--bl-size-2xs);
  --bl-input-padding-horizontal: var(--bl-size-xs);
  --bl-input-border-color: var(--bl-color-border);
  --bl-input-icon-color: var(--bl-color-content-tertiary);
  --bl-input-text-color: var(--bl-color-content-primary);
  --bl-input-height: var(--bl-size-2xl);
}

input {
  outline: none;
  box-sizing: border-box;
  height: var(--bl-input-height);
  border: solid 1px var(--bl-input-border-color);
  width: 100%;
  font: var(--bl-font-title-3-regular);
  padding: 0 var(--bl-input-padding-horizontal);
  margin: 0;
  border-radius: 4px;
  color: var(--bl-input-text-color);
}

bl-icon {
  position: absolute;
  top: var(--bl-input-padding-vertical);
  right: var(--bl-input-padding-horizontal);
  font-size: var(--bl-size-m);
  z-index: 1;
  color: var(--bl-input-icon-color);
}

input:focus {
  --bl-input-border-color: var(--bl-color-primary);
}

:host([label-fixed]) bl-icon {
  top: calc(var(--bl-input-padding-vertical) + var(--bl-size-m));
}

input:focus ~ bl-icon {
  --bl-input-icon-color: var(--bl-color-primary);
}

:host ::placeholder {
  color: var(--bl-color-content-tertiary);
}

:host([label]) ::placeholder {
  color: transparent;
  transition: color ease-out 0.4s;
}

:host input:focus::placeholder,
:host([label-fixed]) ::placeholder {
  color: var(--bl-color-content-tertiary);
}

input:disabled {
  background-color: var(--bl-color-primary-background);

  --bl-input-text-color: var(--bl-color-content-tertiary);
}

input.dirty:invalid {
  --bl-input-border-color: var(--bl-color-danger);
}

input.has-icon {
  padding-right: calc(var(--bl-size-xs) * 2 + var(--bl-size-m));
}

.error-icon,
.invalid-text {
  display: none;
}

label {
  position: absolute;
  top: var(--bl-input-padding-vertical);
  left: var(--bl-input-padding-horizontal);
  transition: all ease-in 0.2s;
  pointer-events: none;
  font: var(--bl-font-title-3-regular);
  color: var(--bl-color-content-tertiary);
  padding: 0;
}

:where(input:focus, input.has-value) ~ label {
  top: 0;
  left: var(--bl-size-2xs);
  transform: translateY(-50%);
  font: var(--bl-font-caption);
  color: var(--bl-color-content-secondary);
  padding: 0 var(--bl-size-3xs);
  background-color: var(--bl-color-primary-background);
  pointer-events: initial;
}

:host([label-fixed]) {
  padding-top: var(--bl-size-m);
}

:host([label-fixed]) label {
  top: 0;
  left: 0;
  transition: none;
  transform: none;
  pointer-events: initial;
  font: var(--bl-font-caption);
  color: var(--bl-color-content-secondary);
  padding: 0;
}

.dirty:invalid ~ label {
  color: var(--bl-color-danger);
}

.invalid-text,
.help-text {
  font: var(--bl-font-title-4-regular);
  padding: var(--bl-size-3xs) var(--bl-input-padding-horizontal);
  margin: 0;
}

.invalid-text {
  color: var(--bl-color-danger);
}

.help-text {
  color: var(--bl-color-content-secondary);
}

.error-icon {
  color: var(--bl-color-danger);
}

.dirty:invalid ~ .invalid-text {
  display: block;
}

.dirty:invalid ~ .help-text {
  display: none;
}

.dirty:invalid ~ .error-icon {
  display: inline-block;
}

.dirty:invalid ~ .custom-icon ~ .error-icon {
  display: none;
}

.dirty:invalid ~ .custom-icon {
  --bl-input-icon-color: var(--bl-color-danger);
}

:host([size='large']) {
  --bl-input-height: var(--bl-size-3xl);
  --bl-input-padding-vertical: var(--bl-size-xs);
  --bl-input-padding-horizontal: var(--bl-size-m);
}
